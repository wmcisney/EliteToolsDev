@model RadialReview.Controllers.QuarterlyController.Modal2ViewModel
@{ 
	var guid = Html.NewGuid();

}
<div class="form-horizontal printout-modal @guid">

    <input type="hidden" id="meetingId" value="@Model.id" />
    
    <div class="clearfix"></div>
    <div class="row ">
        <div class="col-md-6 col-md-offset-1">
            <div class="smallBreak2" style="padding-bottom: 20px;padding-left: 10px;">
                <a href="javascript:void();" class="clickable" onclick="@(guid)_Qtr()">(Select Documents for Quarterly)</a> |
                <a href="javascript:void();" class="clickable" onclick="@(guid)_All()">(Select All)</a> |
                <a href="javascript:void();" class="clickable" onclick="@(guid)_None()">(Select None)</a>
                <br />
            </div>
            <div class="form-group">
                <div class="col-sm-1  ">
                    @Html.CheckBoxFor(m => m.options.coverPage, new { @class = "checkbox qtr  pull-right" })
                </div>
                <label for="vto" class="col-sm-9 control-label alignLeft">Include Cover Page</label>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">
                    @Html.CheckBoxFor(m => m.options.rocks, new { @class = "checkbox qtr  pull-right" })
                </div>
                <label for="rocks" class="col-sm-9 control-label alignLeft">Include Rocks</label>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">
                    @Html.CheckBoxFor(m => m.options.headlines, new { @class = "checkbox  pull-right" })
                </div>
                <label for="headlines" class="col-sm-9 control-label alignLeft">Include Headlines</label>
            </div>
            <div class="form-group">
                <div class="col-sm-1  ">
                    @Html.CheckBoxFor(m => m.options.vto, new { @class = "checkbox qtr  pull-right" })
                </div>
                <label for="vto" class="col-sm-9 control-label alignLeft">Include Vision/Traction Organizer™</label>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">
                    @Html.CheckBoxFor(m => m.options.acc, new { @class = "checkbox qtr  pull-right" })
                </div>
                <label for="acc" class="col-sm-9 control-label alignLeft">Include Accountability Chart <span style="top: -2px;left:2px;position: relative;" id="accLoadingContainer"></span></label>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">
                    @Html.CheckBoxFor(m => m.options.todos, new { @class = "checkbox  pull-right" })
                </div>
                <label for="headlines" class="col-sm-9 control-label alignLeft">Include To-Dos</label>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">
                    @Html.CheckBoxFor(m => m.options.issues, new { @class = "checkbox qtr pull-right" })
                </div>
                <label for="headlines" class="col-sm-9 control-label alignLeft">Include Issues</label>
            </div>
            <div class="form-group">
                <div class="col-sm-1 ">
                    @Html.CheckBoxFor(m => m.options.scorecard, new { @class = "checkbox qtr pull-right" })
                </div>
                <label for="scorecard" class="col-sm-9 control-label alignLeft">Include Scorecard</label>
            </div>
            @if (ViewBag.IncludePeople == true) {
                <div class="form-group">
                    <div class="col-sm-1 ">
                        @Html.CheckBoxFor(m => m.options.pa, new { @class = "checkbox qtr  pull-right" })
                    </div>
                    <label for="pa" class="col-sm-9 control-label alignLeft">Include People Analyzer</label>
                </div>
            }
        </div>
        <div class="col-md-6"></div>
    </div>

</div>
<style>
    .printout-modal .control-label {
        /*padding-top: 0px;*/
    }
</style>
<script>
	function @(guid)_All() {
        $(".@guid input").prop('checked', true);
	}
	function @(guid)_None() {
        $(".@guid input").prop('checked', false);
	}

	function @(guid)_Qtr() {
        $(".@guid input").prop('checked', false);
        $(".@guid input.qtr").prop('checked', true);
	}
</script>

@*<script>
    var guid = "@(Guid.NewGuid().ToString())";
    var doneLoadingAC = false;
    function createNodes() {
        doneLoadingAC = true;
        var nodes = $("#accFrame")[0].contentWindow.generateAccNodes();
        $("#rootInput").val(JSON.stringify(nodes));
        $("#modalOk").attr("disabled", false);
        $("#modalOk").attr("title", false);
        $("#accLoadingContainer").html("");
    }

    function updateAllowDone() {
        if (doneLoadingAC || !$(acc).is(":checked")) {
            $("#modalOk").attr("disabled", false);
        } else {
            $("#modalOk").attr("disabled", "disabled");
            $("#modalOk").attr("title", "Generating accountability chart");
        }
        if ($("#accFrame").attr("src") == "about:blank") {
            $("#accFrame").attr("src", "/accountability/chart?expandAll=true");
            $("#accLoadingContainer").html("<img src='/content/img/ajax-loader.gif'/>");
        }

    }

    $("body").on("AccountabilityChartRenderComplete." + guid, function () {
        if (createNodes.timeout) {
            clearTimeout(createNodes.timeout);
        }
        createNodes.timeout = setTimeout(createNodes, 300);
    });

    $('#modal').on("hidden.bs.modal." + guid, function () {
        var guid2 = guid;
        setTimeout(function () {
            $("body").off("." + guid2);
        }, 1000);
    })

</script>*@ 