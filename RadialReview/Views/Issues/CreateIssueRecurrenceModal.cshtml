@model RadialReview.Models.Issues.IssueVM

@Html.SecuredHiddenFor(x => x.ByUserId)
@Html.SecuredHiddenFor(x => x.MeetingId)
@Html.SecuredHiddenFor(x => x.OwnerId)
@{ 
	var guid = Html.NewGuid();
}

@Html.SecuredHiddenFor(x => x.ForId)
<div id="container-@guid">
	<div class="form-group">
		@Html.LabelFor(x => x.Message)
		@Html.TextBoxFor(x => x.Message, new { @class = "form-control", placeholder = "Enter the Issue", autocomplete = "off" })
	</div>
	<div id="upload-btn-@guid" class="pull-right"></div>
	<div class="form-group">
		@Html.LabelFor(x => x.Details)
		@Html.TextAreaFor(x => x.Details, new { @class = "form-control verticalOnly", rows = "6", placeholder = "Enter details (optional)" })
	</div>
</div>
<div class="row">
	<div class="col-sm-12">
		<div class="form-group">
			<label>Meeting</label>
			<select name="@Html.NameFor(x => x.RecurrenceId)" class="form-control" style="width: 100%;">
				@foreach (var u in ViewBag.PossibleMeetings) {
					<option value="@u.id" @(u.id == Model.RecurrenceId ? "selected" : "")>@u.name</option>
				}
			</select>
		</div>
	</div>
</div>

<script>
	TT.Html.UploadButton({
		container:"#upload-btn-@(guid)",
		url: "/upload/uploadfile",
		success: function (data) {
			var url = data.url;
			var ta = $("#container-@guid textarea");
			ta.val(ta.val() + "\n" + url+"\n");
		}
	});
</script>
